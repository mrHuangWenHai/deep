<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deep.infra.persistence.sql.mapper.SaledMapper" >
  <resultMap id="BaseResultMap" type="com.deep.domain.model.Saled" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="src" property="src" jdbcType="INTEGER" />
    <result column="s_name" property="sName" jdbcType="VARCHAR" />
    <result column="dst" property="dst" jdbcType="INTEGER" />
    <result column="d_name" property="dName" jdbcType="VARCHAR" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="vaccine" property="vaccine" jdbcType="VARCHAR" />
    <result column="standby3" property="standby3" jdbcType="VARCHAR" />
    <result column="standby2" property="standby2" jdbcType="VARCHAR" />
    <result column="standby1" property="standby1" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, src, s_name, dst, d_name, brand, vaccine, standby3, standby2, standby1
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.deep.domain.model.SaledExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from saled
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from saled
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from saled
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deep.domain.model.SaledExample" >
    delete from saled
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deep.domain.model.Saled" >
    insert into saled (id, src, s_name, 
      dst, d_name, brand, 
      vaccine, standby3, standby2, 
      standby1)
    values (#{id,jdbcType=INTEGER}, #{src,jdbcType=INTEGER}, #{sName,jdbcType=VARCHAR}, 
      #{dst,jdbcType=INTEGER}, #{dName,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, 
      #{vaccine,jdbcType=VARCHAR}, #{standby3,jdbcType=VARCHAR}, #{standby2,jdbcType=VARCHAR}, 
      #{standby1,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.deep.domain.model.Saled" >
    insert into saled
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="src != null" >
        src,
      </if>
      <if test="sName != null" >
        s_name,
      </if>
      <if test="dst != null" >
        dst,
      </if>
      <if test="dName != null" >
        d_name,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="vaccine != null" >
        vaccine,
      </if>
      <if test="standby3 != null" >
        standby3,
      </if>
      <if test="standby2 != null" >
        standby2,
      </if>
      <if test="standby1 != null" >
        standby1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="src != null" >
        #{src,jdbcType=INTEGER},
      </if>
      <if test="sName != null" >
        #{sName,jdbcType=VARCHAR},
      </if>
      <if test="dst != null" >
        #{dst,jdbcType=INTEGER},
      </if>
      <if test="dName != null" >
        #{dName,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="vaccine != null" >
        #{vaccine,jdbcType=VARCHAR},
      </if>
      <if test="standby3 != null" >
        #{standby3,jdbcType=VARCHAR},
      </if>
      <if test="standby2 != null" >
        #{standby2,jdbcType=VARCHAR},
      </if>
      <if test="standby1 != null" >
        #{standby1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deep.domain.model.SaledExample" resultType="java.lang.Integer" >
    select count(*) from saled
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update saled
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.src != null" >
        src = #{record.src,jdbcType=INTEGER},
      </if>
      <if test="record.sName != null" >
        s_name = #{record.sName,jdbcType=VARCHAR},
      </if>
      <if test="record.dst != null" >
        dst = #{record.dst,jdbcType=INTEGER},
      </if>
      <if test="record.dName != null" >
        d_name = #{record.dName,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null" >
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.vaccine != null" >
        vaccine = #{record.vaccine,jdbcType=VARCHAR},
      </if>
      <if test="record.standby3 != null" >
        standby3 = #{record.standby3,jdbcType=VARCHAR},
      </if>
      <if test="record.standby2 != null" >
        standby2 = #{record.standby2,jdbcType=VARCHAR},
      </if>
      <if test="record.standby1 != null" >
        standby1 = #{record.standby1,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update saled
    set id = #{record.id,jdbcType=INTEGER},
      src = #{record.src,jdbcType=INTEGER},
      s_name = #{record.sName,jdbcType=VARCHAR},
      dst = #{record.dst,jdbcType=INTEGER},
      d_name = #{record.dName,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      vaccine = #{record.vaccine,jdbcType=VARCHAR},
      standby3 = #{record.standby3,jdbcType=VARCHAR},
      standby2 = #{record.standby2,jdbcType=VARCHAR},
      standby1 = #{record.standby1,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deep.domain.model.Saled" >
    update saled
    <set >
      <if test="src != null" >
        src = #{src,jdbcType=INTEGER},
      </if>
      <if test="sName != null" >
        s_name = #{sName,jdbcType=VARCHAR},
      </if>
      <if test="dst != null" >
        dst = #{dst,jdbcType=INTEGER},
      </if>
      <if test="dName != null" >
        d_name = #{dName,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="vaccine != null" >
        vaccine = #{vaccine,jdbcType=VARCHAR},
      </if>
      <if test="standby3 != null" >
        standby3 = #{standby3,jdbcType=VARCHAR},
      </if>
      <if test="standby2 != null" >
        standby2 = #{standby2,jdbcType=VARCHAR},
      </if>
      <if test="standby1 != null" >
        standby1 = #{standby1,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deep.domain.model.Saled" >
    update saled
    set src = #{src,jdbcType=INTEGER},
      s_name = #{sName,jdbcType=VARCHAR},
      dst = #{dst,jdbcType=INTEGER},
      d_name = #{dName,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      vaccine = #{vaccine,jdbcType=VARCHAR},
      standby3 = #{standby3,jdbcType=VARCHAR},
      standby2 = #{standby2,jdbcType=VARCHAR},
      standby1 = #{standby1,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.deep.domain.model.SaledExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from saled
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>