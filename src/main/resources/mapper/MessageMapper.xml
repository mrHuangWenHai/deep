<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deep.infra.persistence.sql.mapper.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.deep.domain.model.Message" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="inserttime" property="inserttime" jdbcType="TIMESTAMP" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="attitude" property="attitude" jdbcType="VARCHAR" />
    <result column="intention" property="intention" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, contact, message, inserttime, tag, attitude, intention
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.deep.domain.model.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deep.domain.model.MessageExample" >
    delete from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deep.domain.model.Message" useGeneratedKeys="true" keyProperty="messageId">
    insert into message (id, username, contact,
    message, inserttime, tag,
    attitude, intention)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR},
    #{message,jdbcType=VARCHAR}, #{inserttime,jdbcType=TIMESTAMP}, #{tag,jdbcType=VARCHAR},
    #{attitude,jdbcType=VARCHAR}, #{intention,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.deep.domain.model.Message" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="inserttime != null" >
        inserttime,
      </if>
      <if test="tag != null" >
        tag,
      </if>
      <if test="attitude != null" >
        attitude,
      </if>
      <if test="intention != null" >
        intention,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="inserttime != null" >
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="attitude != null" >
        #{attitude,jdbcType=VARCHAR},
      </if>
      <if test="intention != null" >
        #{intention,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deep.domain.model.MessageExample" resultType="java.lang.Integer" >
    select count(*) from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update message
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null" >
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.inserttime != null" >
        inserttime = #{record.inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tag != null" >
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.attitude != null" >
        attitude = #{record.attitude,jdbcType=VARCHAR},
      </if>
      <if test="record.intention != null" >
        intention = #{record.intention,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update message
    set id = #{record.id,jdbcType=INTEGER},
    username = #{record.username,jdbcType=VARCHAR},
    contact = #{record.contact,jdbcType=VARCHAR},
    message = #{record.message,jdbcType=VARCHAR},
    inserttime = #{record.inserttime,jdbcType=TIMESTAMP},
    tag = #{record.tag,jdbcType=VARCHAR},
    attitude = #{record.attitude,jdbcType=VARCHAR},
    intention = #{record.intention,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deep.domain.model.Message" >
    update message
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="inserttime != null" >
        inserttime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="tag != null" >
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="attitude != null" >
        attitude = #{attitude,jdbcType=VARCHAR},
      </if>
      <if test="intention != null" >
        intention = #{intention,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deep.domain.model.Message" >
    update message
    set username = #{username,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      inserttime = #{inserttime,jdbcType=TIMESTAMP},
      tag = #{tag,jdbcType=VARCHAR},
      attitude = #{attitude,jdbcType=VARCHAR},
      intention = #{intention,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.deep.domain.model.MessageExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="multiFind" parameterType="com.deep.domain.model.Message" resultMap="BaseResultMap">
      SELECT *
      <where>
          <if test="message != null and message != ''">
              and message like contact ('%', #{message}, '%')
          </if>
          <if test="attitude != null and attitude != ''">
              and attitude like contact ('%', #{attitude}, '%')
          </if>
          <if test="intention != null and intention != ''">
              and intention like contact ('%', #{intention}, '%')
          </if>
          <if test="sTime != null and sTime != '' and eTime != null and eTime != ''">
              and inserttime BETWEEN #{sTime} AND #{eTime}
          </if>
      </where>
  </select>
</mapper>